// tools:mixin


/* Accessibility outline */
@mixin accessible_outline {
  outline: 2px dotted color(primary);
  outline-offset: 0.2rem;
}


// Media queries 
// Exemple : bp(MAX, MIN)
// @include bp(500px) = @media (max-width: 500px)
// @include bp(0, 500px) = @media (min-width: 500px)
// @include bp(500px, 320px) = @media (min-width: 320px) and (max-width: 500px)

@mixin mq($max: 0, $min: 0) {
  $type: type-of($min);
  
  @if $type == string {
    @if $max == xsmall { 
      @media (max-width: $xsmall) { @content; }       // Mobile Devices
    }
    
    @else if $max == small {
      @media (max-width: $small) { @content; }       // Tablet Devices
    }
    
    @else if $max == medium {
      @media (max-width: $medium ) { @content; }       // Desktops
    }
    
    @else if $max == large {
      @media (max-width: $large) { @content; }      // Widescreen Desktops
    }
    @else if $max == xlarge {
      @media (max-width: $xlarge ) { @content; }      // Widescreen Desktops
    }
  
    // Otherwise pass a warning to the compiler as to the appropriate options
    @else {
      @warn "The breakpoint mixin supports the following attributes: xsmall, small, medium, large, xlarge";
    }
  }
  @else if $type == number {
    // Allow for custom parameters for min and max size
    $query: "all" !default;
    @if      $min != 0 and $max != 0 { $query: "(min-width: #{$min}) and (max-width: #{$max})"; } // set both min and max
    @else if $min != 0 and $max == 0 { $query: "(min-width: #{$min})"; } // set just min
    @else if $min == 0 and $max != 0 { $query: "(max-width: #{$max})"; } // set just max
    @media #{$query} { @content; }
  }
}


// CSS triangle
// Infos : https://codyhouse.co/blog/post/css-rounded-triangles-with-clip-path
@mixin triangle ($direction: up, $width: 12px, $color: red) {
  width: 0;
  height: 0;
  border: $width solid transparent;
  @if( $direction == left ) {
    border-right-color: $color;
  } @else if( $direction == right ) {
    border-left-color: $color;
  } @else if( $direction == down ) {
    border-top-color: $color;
  } @else {
    border-bottom-color: $color;
  }
}



// IE11 & 10 specific CSS
@mixin ie(){
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) { 
    /* IE 10 & 11 Fix */ 
    @content;
  }
}



// Edge specific CSS
@mixin edge(){
  @supports (-ms-ime-align: auto) {
    /* Microsoft EDGE Fix */ 
    @content;
  }
}


